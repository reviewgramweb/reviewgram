##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	listen 80 default_server;
	listen [::]:80 default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	root /var/www/html;
	client_max_body_size  31M;

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	server_name {DOMAIN},{DOMAIN_IP};

		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;

			auth_basic "Dev Area";
			auth_basic_user_file /etc/nginx/.htpasswd;
		}

		location /github_api {
			valid_referers {DOMAIN};
			if ($invalid_referer) {
					return 403;
			}
			rewrite /github_api/(.*) /$1 break;
			proxy_redirect     off;
			proxy_pass https://api.github.com;
			proxy_set_header Host api.github.com;
			expires off;
		}

		location /pluto {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/pluto$ / break;
				rewrite ^/pluto(.*)$ $1 break;
				proxy_pass https://pluto.web.telegram.org;
				proxy_set_header Host $host;
				expires off;
				access_log off;
		}

		location /venus {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/venus$ / break;
				rewrite ^/venus(.*)$ $1 break;
				proxy_pass https://venus.web.telegram.org;
				expires off;
				access_log off;
		}

		location /aurora {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/aurora$ / break;
				rewrite ^/aurora(.*)$ $1 break;
				proxy_pass https://aurora.web.telegram.org;
				expires off;
				access_log off;
		}

		location /vesta {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/vesta$ / break;
				rewrite ^/vesta(.*)$ $1 break;
				proxy_pass https://vesta.web.telegram.org;
				expires off;
				access_log off;
		}

		location /flora {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/flora$ / break;
				rewrite ^/flora(.*)$ $1 break;
				proxy_pass https://flora.web.telegram.org;
				expires off;
				access_log off;
		}

		location /pluto-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/pluto-1$ / break;
				rewrite ^/pluto-1(.*)$ $1 break;
				proxy_pass https://pluto-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /venus-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/venus-1$ / break;
				rewrite ^/venus-1(.*)$ $1 break;
				proxy_pass https://venus-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /aurora-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/aurora-1$ / break;
				rewrite ^/aurora-1(.*)$ $1 break;
				proxy_pass https://aurora-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /vesta-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/vesta-1$ / break;
				rewrite ^/vesta-1(.*)$ $1 break;
				proxy_pass https://vesta-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /flora-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/flora-1$ / break;
				rewrite ^/flora-1(.*)$ $1 break;
				proxy_pass https://flora-1.web.telegram.org;
				expires off;
				access_log off;
		}

				location /reviewgram {
					include proxy_params;
					proxy_pass http://unix:/root/reviewgram/reviewgram.sock;
				}
	# pass PHP scripts to FastCGI server
	#
	#location ~ \.php$ {
	#	include snippets/fastcgi-php.conf;
	#
	#	# With php-fpm (or other unix sockets):
	#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
	#	# With php-cgi (or other tcp sockets):
	#	fastcgi_pass 127.0.0.1:9000;
	#}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#	deny all;
	#}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}

server {
		# SSL configuration
		#
		# listen 443 ssl default_server;
		# listen [::]:443 ssl default_server;
		#
		# Note: You should disable gzip for SSL traffic.
		# See: https://bugs.debian.org/773332
		#
		# Read up on ssl_ciphers to ensure a secure configuration.
		# See: https://bugs.debian.org/765782
		#
		# Self signed certs generated by the ssl-cert package
		# Don't use them in a production server!
		#
		# include snippets/snakeoil.conf;

			root /var/www/html;

		# Add index.php to the list if you are using PHP
		index index.html index.htm index.nginx-debian.html;
		server_name {DOMAIN}; # managed by Certbot

		client_max_body_size  31M;

		location / {
			# First attempt to serve request as file, then
			# as directory, then fall back to displaying a 404.
			try_files $uri $uri/ =404;

					auth_basic "Dev Area";
					auth_basic_user_file /etc/nginx/.htpasswd;
		}

		location /github_api {
			valid_referers {DOMAIN};
			if ($invalid_referer) {
					return 403;
			}
			rewrite /github_api/(.*) /$1 break;
			proxy_redirect     off;
			proxy_pass https://api.github.com;
			proxy_set_header Host api.github.com;
			expires off;
		}

		location /pluto {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/pluto$ / break;
				rewrite ^/pluto(.*)$ $1 break;
				proxy_pass https://pluto.web.telegram.org;
				proxy_set_header Host $host;
				expires off;
				access_log off;
		}

		location /venus {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/venus$ / break;
				rewrite ^/venus(.*)$ $1 break;
				proxy_pass https://venus.web.telegram.org;
				expires off;
				access_log off;
		}

		location /aurora {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/aurora$ / break;
				rewrite ^/aurora(.*)$ $1 break;
				proxy_pass https://aurora.web.telegram.org;
				expires off;
				access_log off;
		}

		location /vesta {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/vesta$ / break;
				rewrite ^/vesta(.*)$ $1 break;
				proxy_pass https://vesta.web.telegram.org;
				expires off;
				access_log off;
		}

		location /flora {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/flora$ / break;
				rewrite ^/flora(.*)$ $1 break;
				proxy_pass https://flora.web.telegram.org;
				expires off;
				access_log off;
		}

		location /pluto-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/pluto-1$ / break;
				rewrite ^/pluto-1(.*)$ $1 break;
				proxy_pass https://pluto-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /venus-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/venus-1$ / break;
				rewrite ^/venus-1(.*)$ $1 break;
				proxy_pass https://venus-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /aurora-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/aurora-1$ / break;
				rewrite ^/aurora-1(.*)$ $1 break;
				proxy_pass https://aurora-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /vesta-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/vesta-1$ / break;
				rewrite ^/vesta-1(.*)$ $1 break;
				proxy_pass https://vesta-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /flora-1 {
				valid_referers {DOMAIN};
				if ($invalid_referer) {
						return 403;
				}
				rewrite ^/flora-1$ / break;
				rewrite ^/flora-1(.*)$ $1 break;
				proxy_pass https://flora-1.web.telegram.org;
				expires off;
				access_log off;
		}

		location /reviewgram {
				include proxy_params;
				proxy_pass http://unix:/root/reviewgram/reviewgram.sock;
		}
		# pass PHP scripts to FastCGI server
		#
		#location ~ \.php$ {
		#	include snippets/fastcgi-php.conf;
		#
		#	# With php-fpm (or other unix sockets):
		#	fastcgi_pass unix:/var/run/php/php7.0-fpm.sock;
		#	# With php-cgi (or other tcp sockets):
		#	fastcgi_pass 127.0.0.1:9000;
		#}

		# deny access to .htaccess files, if Apache's document root
		# concurs with nginx's one
		#
		#location ~ /\.ht {
		#	deny all;
		#}


		listen [::]:443 ssl ipv6only=on; # managed by Certbot
		listen 443 ssl; # managed by Certbot
		ssl_certificate /etc/letsencrypt/live/{DOMAIN}/fullchain.pem; # managed by Certbot
		ssl_certificate_key /etc/letsencrypt/live/{DOMAIN}/privkey.pem; # managed by Certbot
		include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
		ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
